@mixin create-mq($breakpoint, $min-or-max) {
    @if($breakpoint == 0) {
        @content;
    } @else {
        @media screen and (#{$min-or-max}-width: $breakpoint) {
            @content;
        }
    }
}


.l-col {
    padding-left: calc(#{$grid-gutter} / 2);
    padding-right: calc(#{$grid-gutter} / 2);
    width: 100%;
}

@mixin create-col-classes($modifier, $grid-cols, $breakpoint, $grid-gutter) {
    @include create-mq($breakpoint, 'min') {

        .l-col-#{$modifier}-offset-0 {
            margin-left: 0;
        }

        @for $i from 1 through $grid-cols {
            $grid-cols-percentage: (100 / ($grid-cols / $i) ) * 1%;

            .l-col-#{$modifier}-#{$i} {
                flex-basis: $grid-cols-percentage;
                width: $grid-cols-percentage;
            }

            .l-col-#{$modifier}-offset-#{$i} {
                margin-left: calc((100% / #{$grid-cols} * #{$i}));
            }
        }
    }
}

.l-container {
    max-width: 1140px;
    margin: 0 auto;
    padding: 0 $grid-gutter/2;

    &--fluid {
        margin: 0;
        max-width: 100%;
    }

    &__row {
        display: flex;
        flex-wrap: wrap;
        margin-left: - $grid-gutter / 2;
        margin-right: - $grid-gutter / 2;
    }

    @each $modifier, $breakpoint in $map-grid-props {
        @include create-col-classes($modifier, $grid-cols, $breakpoint, $grid-gutter);
    }
}
